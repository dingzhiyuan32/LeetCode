class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        int n = nums.size();
        vector<int> result;
        for(int i = 0; i < n;)
        {
            //move on if number is on right position or there has another right number on the position
            if(nums[i] == i + 1 || nums[nums[i] - 1] == nums[i])
            {
                i++;
            }
            //move the number to right position
            else
            {
                exchange(nums, nums[i] - 1, i);
            }
        }
        
        //save all the number which is not in right position
        for(int i = 0; i < n; i++)
        {
            if(nums[i] - 1 != i)
            {
                result.push_back(i + 1);
            }
        }
        return(result);
        
    }
    
    //exchange two elements in array
    //@param nums The array to do the exchange
    //@param i, j The indices of elements to be exchanged
    void exchange(vector<int>& nums, int i, int j)
    {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
};
